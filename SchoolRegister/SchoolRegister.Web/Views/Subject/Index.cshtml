@model IEnumerable<SchoolRegister.ViewModels.VMs.SubjectVm>
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@{
    ViewData["Title"] = Localizer["Index"];
}

<h2>@Localizer["Subject"]</h2>

<p>
    <a asp-action="AddOrEditSubject">@Localizer["CreateNew"]</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Localizer[@Html.DisplayNameFor(model => model.Name)]
            </th>
            <th>
                @Localizer[@Html.DisplayNameFor(model => model.Description)]
            </th>
            <th>
                @Localizer[@Html.DisplayNameFor(model => model.TeacherName)]
            </th>
            <th>
                @Localizer[@Html.DisplayNameFor(model => model.TeacherId)]
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>                    
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TeacherName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TeacherId)
                </td>
                <td>
                    @Html.ActionLink(Localizer["Edit"].Value, "AddOrEditSubject", new { id = item.Id }) |
                    @Html.ActionLink(Localizer["Details"].Value, "Details", new { id = item.Id }) 
                </td>
            </tr>
        }
    </tbody>
</table>
